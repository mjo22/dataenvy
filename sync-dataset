#!/bin/bash

# Path to this file
sourcefn=$(readlink -e -- $BASH_SOURCE)
sourcedir=$(dirname -- $sourcefn)
errorsig="ERROR: $sourcefn"

if [[ "$1" == "" ]] || [[ "$2" == "" ]] || [[ "3" == "" ]] ; then
    echo "Enter input, output, and setup directories"
    exit
fi

# Gather input and output directories
outputpath=$1
inputpath=$(readlink -e $2)
setuppath=$(readlink -e $DATAENVY/setup/$3)

# Check args
if [[ "$inputpath" == "" ]]; then
    echo $errorsig
    echo "Input path $2 does not exist"
    exit
fi

if [ -d $1 ]; then
    outputpath=$(readlink -e $1)
    if [ ! -f "$outputpath/local.sh" ]; then
	echo $errorsig
	echo "$outputpath does not seem to be a dataset"
	exit
    fi
fi

if [[ "$setuppath" == "" ]]; then
    echo $errorsig
    echo "Setup path $3 does not exist"
    exit
fi

# Create or sync dataset
rsync -a --exclude '*~' $setuppath/template/* $outputpath

# Get setuppath in terms of $DATAENVY
cut=${setuppath#"$DATAENVY"}
setupliteral="\$DATAENVY$cut"

# Add source data path and setup path to global.sh
sed -i "s:SOURCE_PLACEHOLDER:$inputpath:g" $outputpath/global.sh
sed -i "s:SETUP_PLACEHOLDER:$setupliteral:g" $outputpath/global.sh

# Add source data path and setup path to local.sh
sed -i "s:SOURCE_PLACEHOLDER:$inputpath:g" $outputpath/local.sh
sed -i "s:SETUP_PLACEHOLDER:$setupliteral:g" $outputpath/local.sh

# Add setup source directory to link.sh
sed -i "s:PLACEHOLDER:$setupliteral:g" $outputpath/link.sh

# Add source data path to write_metadata.py
sed -i "s:PLACEHOLDER:$inputpath:g" $outputpath/write_metadata.py

# Configure modules
source $outputpath/local.sh

# Create analysis directories
modules=($MODULES)
for module in ${modules[@]}; do
    mkdir $outputpath/$module
    mkdir $outputpath/$module/result
    mkdir $outputpath/$module/PNG
done

# Write metadata
if [ ! -f $outputpath/metadata.toml ]; then
    cd $outputpath
    python write_metadata.py
    cd -
fi

# Run linkage
source $outputpath/link.sh
